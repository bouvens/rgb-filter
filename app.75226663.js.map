{"version":3,"sources":["webpack:///./src/components/DropImage.jsx","webpack:///./src/constants.js","webpack:///./src/components/presentational/Controls.jsx","webpack:///./src/components/presentational/Samples.jsx","webpack:///./src/components/presentational/Animation.jsx","webpack:///./src/utils/utils.js","webpack:///./src/utils/image-processing.js","webpack:///./src/components/RGBFilter.jsx","webpack:///./src/index.js","webpack:///./src/components/presentational/style.css?ed96","webpack:///./src/components/DropImage.css?f4f1"],"names":["BodyPortal","_ref","children","createPortal","document","body","DropImage","props","_classCallCheck","this","_this","_possibleConstructorReturn","_Component","call","state","output","isDragOver","isFileLoading","onFileLoad","_ref2","target","img","src","result","onError","setState","onImageLoad","_ref3","onDrop","handleDragOver","evt","dataTransfer","dropEffect","stopPropagation","preventDefault","handleDragEnter","handleDragLeave","readAsData","file","readAsDataURL","e","handleFileSelect","files","item","link","getData","_","isEmpty","react_default","a","createElement","key","name","type","size","handleFile","_ref4","FileReader","onload","onerror","Image","crossOrigin","componentDidMount","addEventListener","render","className","style","header","onChange","text","DropImage_BodyPortal","bodyHover","onDragLeave","Component","defaultProps","noop","IDS","makeFullPath","THROBBER","IMAGES","map","SETTERS","Animated","_Animated","Still","_Still","Slow","_Slow","Sharp","_Sharp","Controls","handleChange","controls","es","setters","setHandler","id","label","step","frames","Samples","selectImage","samples","Samples_ref2","sample","onClick","alt","Animation","setImageRef","animation","ref","Animation_ref2","getImageFromSrc","Promise","resolve","image","PROCESSORS","value","Math","min","max","_PROCESSORS","getDeviation","noise","random","triple","c","concat","offScreenCanvas","offScreenContext","DEFAULT_ID","getCanvas","arguments","length","undefined","getContext","toRGB","flow","divider","options","_objectWithoutProperties","canvas","context","width","height","drawImage","data","getImageData","_ref2$data","mapRGB","x","y","index","_data$slice","slice","r","g","b","set","_ref4$options","multiplier","_ref4$options$imageSm","imageSmoothingEnabled","delay","nextWidth","nextHeight","setFrame","redLine","greenLine","blueLine","_mapRGB$x$y","red","green","blue","makeSetFrame","gif","GIF","workers","quality","workerScript","i","imageData","putImageData","scaledCanvas","scaledContext","msImageSmoothingEnabled","scale","addFrame","copy","on","blob","window","URL","createObjectURL","RGBFilter","Object","keys","handleDrop","_this$setState","round","v","then","_this2","_state","limit","getDivider","DropImage_DropImage","presentational_Controls","presentational_Samples","presentational_Animation","RGBFilter_RGBFilter","querySelector","module","exports"],"mappings":"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","file":"app.75226663.js","sourcesContent":["import React, { Component } from 'react'\nimport { createPortal } from 'react-dom'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport style from './DropImage.css'\n\nconst BodyPortal = ({ children }) => createPortal(children, document.body)\n\nexport default class DropImage extends Component {\n    static propTypes = {\n        onDrop: PropTypes.func,\n        text: PropTypes.string,\n    }\n    static defaultProps = {\n        onDrop: _.noop,\n        text: 'Or drag an image on the page',\n    }\n\n    constructor (props) {\n        super(props)\n\n        this.file = new FileReader()\n        this.file.onload = this.onFileLoad\n        this.file.onerror = this.onError\n\n        this.img = new Image()\n        this.img.onload = this.onImageLoad\n        this.img.onerror = this.onError\n        this.img.crossOrigin = 'Anonymous'\n    }\n\n    state = {\n        output: '',\n        isDragOver: false,\n        isFileLoading: false,\n    }\n\n    componentDidMount () {\n        document.addEventListener('dragover', this.handleDragOver)\n        document.addEventListener('dragenter', this.handleDragEnter)\n        document.addEventListener('drop', this.handleFileSelect)\n    }\n\n    onFileLoad = ({ target }) => {\n        this.img.src = target.result\n    }\n\n    onError = () => {\n        this.setState({\n            isFileLoading: false,\n            output: 'Try another image, please. If this is an image from other website try to save it locally before dragging.',\n        })\n    }\n\n    onImageLoad = ({ target }) => {\n        this.setState({ isFileLoading: false })\n        this.props.onDrop(target)\n    }\n\n    handleDragOver = (evt) => {\n        const { dataTransfer } = evt\n        dataTransfer.dropEffect = 'copy' // explicitly show this is a copy\n        evt.stopPropagation()\n        evt.preventDefault()\n    }\n\n    handleDragEnter = () => {\n        this.setState({ isDragOver: true })\n    }\n\n    handleDragLeave = () => {\n        this.setState({ isDragOver: false })\n    }\n\n    readAsData = (file) => {\n        try {\n            this.file.readAsDataURL(file)\n        } catch (e) {\n            this.onError(e)\n        }\n    }\n\n    handleFileSelect = (evt) => {\n        this.setState({\n            isDragOver: false,\n            isFileLoading: true,\n        })\n\n        evt.stopPropagation()\n        evt.preventDefault()\n\n        const { files } = evt.dataTransfer\n        const file = files.item(0)\n        const link = evt.dataTransfer.getData('text')\n\n        let output\n\n        if (_.isEmpty(files) && evt.dataTransfer.getData('text')) {\n            output = ''\n            this.img.src = link\n        } else {\n            output = (\n                <li key={file.name}>\n                    {`${file.name} (${file.type || 'n/a'}) - ${file.size} bytes`}\n                </li>\n            )\n        }\n        this.setState({ output })\n\n        this.readAsData(file)\n    }\n\n    handleFile = ({ target: { files } }) => {\n        this.readAsData(files.item(0))\n    }\n\n    render () {\n        return (\n            <div>\n                <div className={style.header}>\n                    <input type=\"file\" onChange={this.handleFile} />{this.props.text}\n                </div>\n                <div className={style.output}>{this.state.output}</div>\n                <BodyPortal>\n                    {this.state.isDragOver &&\n                    <div\n                        className={style.bodyHover}\n                        onDragLeave={this.handleDragLeave}\n                    >\n                        Drop it!\n                    </div>\n                    }\n                    {this.state.isFileLoading &&\n                    <div className={style.bodyHover}>\n                        Loading...\n                    </div>\n                    }\n                </BodyPortal>\n            </div>\n        )\n    }\n}\n","export const IDS = {\n    multiplier: 'multiplier',\n    limit: 'limit',\n    noise: 'noise',\n    sample: 'sample',\n    animate: 'animate',\n    frames: 'frames',\n    delay: 'delay',\n}\n\nconst BASE_THROBBER = 'triangles.svg'\nconst BASE_IMAGES = [\n    'moon.jpg',\n    'sunset.jpg',\n    'wikipe-tan.png',\n]\n\nconst makeFullPath = (name) => `./images/${name}`\n\nexport const THROBBER = makeFullPath(BASE_THROBBER)\nexport const IMAGES = BASE_IMAGES.map(makeFullPath)\n\nexport const SETTERS = {\n    Animated: {\n        [IDS.multiplier]: 2,\n        [IDS.limit]: 400,\n        [IDS.noise]: 10,\n        [IDS.frames]: 5,\n        [IDS.delay]: 200,\n    },\n    Still: {\n        [IDS.multiplier]: 3,\n        [IDS.limit]: 800,\n        [IDS.noise]: 0,\n        [IDS.frames]: 1,\n    },\n    Slow: {\n        [IDS.multiplier]: 2,\n        [IDS.limit]: 400,\n        [IDS.noise]: 20,\n        [IDS.frames]: 2,\n        [IDS.delay]: 800,\n    },\n    Sharp: {\n        [IDS.multiplier]: 1,\n        [IDS.limit]: 500,\n        [IDS.noise]: 10,\n        [IDS.frames]: 3,\n        [IDS.delay]: 200,\n    },\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input, SettersBlock } from 'state-control'\nimport _ from 'lodash'\nimport { IDS, SETTERS } from '../../constants'\nimport style from './style.css'\n\nconst Controls = ({ state, handleChange }) => (\n    <div className={style.controls}>\n        <SettersBlock\n            className={style.setters}\n            setters={SETTERS}\n            setHandler={handleChange}\n        />\n        <Connector\n            state={state}\n            onChange={handleChange}\n            type=\"number\"\n        >\n            <Input\n                id={IDS.multiplier}\n                label=\"Zoom in result:\"\n            />\n            <Input\n                id={IDS.limit}\n                label=\"Size:\"\n                step={100}\n            />\n            <Input\n                id={IDS.noise}\n                label=\"Color noise:\"\n                step={5}\n            />\n            <Input\n                id={IDS.frames}\n                label=\"Frames:\"\n                step={1}\n            />\n            {state.frames > 1 &&\n            <Input\n                id={IDS.delay}\n                label=\"Delay:\"\n                step={50}\n            />}\n        </Connector>\n    </div>\n)\n\nControls.propTypes = {\n    state: PropTypes.shape(_.reduce(IDS, (all, item) => ({\n        ...all,\n        [item]: PropTypes.number,\n    }), {})).isRequired,\n    handleChange: PropTypes.func,\n}\n\nControls.defaultProps = {\n    handleChange: _.noop,\n}\n\nexport default Controls\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { IMAGES } from '../../constants'\nimport style from './style.css'\n\nconst Samples = ({ selectImage }) => (\n    <div className={style.samples}>\n        <p>Or select one of samples:</p>\n        {IMAGES.map((sample) => (\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions,jsx-a11y/click-events-have-key-events\n            <img\n                key={sample}\n                src={sample}\n                onClick={selectImage(sample)}\n                alt=\"\"\n            />\n        ))}\n    </div>\n)\n\nSamples.propTypes = {\n    selectImage: PropTypes.func,\n}\n\nSamples.defaultProps = {\n    selectImage: _.noop,\n}\n\nexport default Samples\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport style from './style.css'\n\nconst Animation = ({ setImageRef }) => (\n    <div className={style.animation}>\n        <img\n            ref={setImageRef}\n            alt=\"\"\n        />\n        <p>Do right click on image and „Save image as...“</p>\n    </div>\n)\n\nAnimation.propTypes = {\n    setImageRef: PropTypes.func,\n}\n\nAnimation.defaultProps = {\n    setImageRef: _.noop,\n}\n\nexport default Animation\n","import { IDS } from '../constants'\n\nexport const getImageFromSrc = (src) => new Promise((resolve) => {\n    const image = new Image()\n\n    image.onload = ({ target }) => {\n        resolve(target)\n    }\n    image.src = src\n})\n\nexport function getDivider ({ image, limit, multiplier }) {\n    const maxSize = Math.max(image.width, image.height)\n    const realLimit = limit / multiplier / 3\n\n    return maxSize / realLimit\n}\n\nexport const PROCESSORS = {\n    [IDS.multiplier]: (value) => Math.min(Math.max(value, 1), 16),\n    [IDS.limit]: (value) => Math.min(Math.max(value, 1), 1000),\n    [IDS.noise]: (value) => Math.min(Math.max(value, 0), 100),\n    [IDS.frames]: (value) => Math.min(Math.max(value, 1), 10),\n}\n\nexport const getDeviation = (noise) => Math.random() * (noise / 100) * 255\n\nexport const triple = (c) => c.concat(c, c)\n\n// singletons for canvas and context\n\nconst offScreenCanvas = []\nconst offScreenContext = []\nconst DEFAULT_ID = 'DEFAULT_ID'\n\nexport function getCanvas (id = DEFAULT_ID) {\n    if (!offScreenCanvas[id]) {\n        offScreenCanvas[id] = document.createElement('canvas')\n    }\n\n    return offScreenCanvas[id]\n}\n\nexport function getContext (id = DEFAULT_ID) {\n    if (!offScreenContext[id]) {\n        offScreenContext[id] = getCanvas(id).getContext('2d')\n    }\n\n    return offScreenContext[id]\n}\n","import _ from 'lodash'\nimport GIF from 'gif.js'\nimport { getCanvas, getContext, getDeviation, triple } from './utils'\n\nconst SCALED = 'SCALED'\n\nfunction reduceImage ({ image, divider, ...options }) {\n    const canvas = getCanvas()\n    const context = getContext()\n    const width = image.width / divider\n    const height = image.height / divider\n\n    canvas.width = width\n    canvas.height = height\n    context.drawImage(image, 0, 0, width, height)\n\n    if (getCanvas().width < 1 || getCanvas().height < 1) {\n        return {}\n    }\n\n    return {\n        data: context.getImageData(0, 0, width, height),\n        options,\n    }\n}\n\nfunction mapToRGB ({ data: { data, width, height }, options }) {\n    const mapRGB = []\n\n    for (let x = 0; x < width; x += 1) {\n        for (let y = 0; y < height; y += 1) {\n            const index = ((y * width) + x) * 4\n            const [r, g, b] = data.slice(index, index + 3)\n\n            _.set(mapRGB, [x, y], { r, g, b })\n        }\n    }\n\n    return { mapRGB, options }\n}\n\nconst makeSetFrame = (mapRGB, width, height, noise) => ({ data }) => {\n    for (let y = 0; y < height; y += 1) {\n        let redLine = []\n        let greenLine = []\n        let blueLine = []\n\n        for (let x = 0; x < width; x += 1) {\n            let { r, g, b } = mapRGB[x][y]\n\n            r += getDeviation(noise)\n            g += getDeviation(noise)\n            b += getDeviation(noise)\n\n            const red = [r, 0, 0, 255]\n            const green = [0, g, 0, 255]\n            const blue = [0, 0, b, 255]\n\n            redLine = redLine.concat(triple(red))\n            greenLine = greenLine.concat(triple(green))\n            blueLine = blueLine.concat(triple(blue))\n        }\n\n        data.set(redLine.concat(greenLine, blueLine), (y * width * 3) * 4 * 3)\n    }\n}\n\nconst filterImageLikeAnOldTV = ({\n    mapRGB,\n    options: {\n        noise,\n        frames,\n        multiplier,\n        imageSmoothingEnabled = false,\n        delay,\n    },\n}) => new Promise((resolve) => {\n    const width = mapRGB.length\n    const canvas = getCanvas()\n    const context = getContext()\n    if (width === 0) {\n        return\n    }\n    const height = mapRGB[0].length\n    const nextWidth = width * 3\n    const nextHeight = height * 3\n\n    canvas.width = nextWidth\n    canvas.height = nextHeight\n\n    const setFrame = makeSetFrame(mapRGB, width, height, noise)\n\n    const gif = new GIF({\n        workers: 2,\n        quality: 10,\n        workerScript: './utils/gif.worker.js',\n    })\n\n    for (let i = 0; i < frames; i += 1) {\n        const imageData = context.getImageData(0, 0, nextWidth, nextHeight)\n\n        setFrame(imageData)\n\n        context.putImageData(imageData, 0, 0)\n\n        const scaledCanvas = getCanvas(SCALED)\n\n        scaledCanvas.width = canvas.width * multiplier\n        scaledCanvas.height = canvas.height * multiplier\n\n        const scaledContext = getContext(SCALED)\n\n        scaledContext.imageSmoothingEnabled = imageSmoothingEnabled\n        scaledContext.msImageSmoothingEnabled = imageSmoothingEnabled\n\n        scaledContext.scale(multiplier, multiplier)\n        scaledContext.drawImage(canvas, 0, 0)\n\n        gif.addFrame(scaledCanvas, {\n            delay,\n            copy: true,\n        })\n    }\n\n    gif.on('finished', (blob) => {\n        resolve(window.URL.createObjectURL(blob))\n    })\n\n    gif.render()\n})\n\nexport const toRGB = _.flow([reduceImage, mapToRGB, filterImageLikeAnOldTV])\n","import React, { Component } from 'react'\nimport DragAndDrop from './DropImage'\nimport { Controls, Samples, Animation } from './presentational'\nimport { IMAGES, SETTERS, THROBBER } from '../constants'\nimport { getImageFromSrc, getDivider, PROCESSORS, toRGB } from '../utils'\n\nexport default class RGBFilter extends Component {\n    state = { ...SETTERS[Object.keys(SETTERS)[0]] }\n\n    componentDidMount () {\n        this.selectImage(IMAGES[0])()\n    }\n\n    setImageRef = (e) => {\n        this.image = e\n    }\n\n    handleDrop = (image) => {\n        this.setState({ image })\n    }\n\n    handleChange = (name, value) => {\n        this.setState({\n            [name]: Math.round((PROCESSORS[name] || ((v) => v))(value)),\n        })\n    }\n\n    selectImage = (sample) => () => {\n        getImageFromSrc(sample).then((image) => {\n            this.setState({ image })\n        })\n    }\n\n    render () {\n        const { image, limit, noise, frames, delay, multiplier } = this.state\n        if (this.image && image) {\n            this.image.src = THROBBER\n            toRGB({\n                divider: getDivider({ image, limit, multiplier }),\n                noise,\n                frames,\n                delay,\n                multiplier,\n                image,\n            }).then((src) => {\n                this.image.src = src\n            })\n        }\n\n        return (\n            <div>\n                <DragAndDrop\n                    onDrop={this.handleDrop}\n                    text=\"Or drag and drop your image anywhere on the page\"\n                />\n                <Controls\n                    state={this.state}\n                    handleChange={this.handleChange}\n                />\n                <Samples selectImage={this.selectImage} />\n                <Animation setImageRef={this.setImageRef} />\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './index.css'\nimport RGBFilter from './components/RGBFilter'\n\nrender(<RGBFilter />, document.querySelector('#app'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setters\":\"style__setters__1rAxM\",\"controls\":\"style__controls__3wr2f\",\"samples\":\"style__samples__9Iqr3\",\"animation\":\"style__animation__1UXNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DropImage__header__2YUYx\",\"output\":\"DropImage__output__1uOel\",\"bodyHover\":\"DropImage__bodyHover__37F_0\"};"],"sourceRoot":""}